name = hlb
file_extensions [] = hlb;
textmate_uuid = 88c38584-8b5f-45be-93a6-e2c9da5b6e3f

styles [] {

   .whitespace : style {}

   .string : style {
      color = #c679dd
   }

   .constant : style {
      color = #c95b69
      textmate_scope = constant
   }

   .variable : style {
      color = #98c373
      textmate_scope = variable
   }

   .builtin : style {
      bold = true
      textmate_scope = variable.language
   }

   .keyword : style {
      color = #4096dd
      textmate_scope = keyword
   }

   .type : style {
      color = #ad7c09
      textmate_scope = entity.name.type
   }

   .comment : style {
      color = #8abeb7
      italic = true
      textmate_scope = comment
   }

   .punctuation : style {
      color = red_2
      textmate_scope = punctuation
   }

   .illegal : style {
      color = white
      background_color = red
      textmate_scope = invalid
   }

}

__TYPE \= (\bstring\b|\bint\b|\bbool\b|\bfs\b|\boption\b)
__WHITESPACE \= ([\t ]+)
__IDENT \= (\b[a-zA-Z_][a-zA-Z0-9]*\b)
__KEYWORD \= (\b(with|as|variadic)\b)
__BOOL \= (\b(true|false)\b)
__NUMERIC \= (\b(0(b|B|o|O|x|X)[a-fA-F0-9]+)\b)
__DECIMAL \= (\b(0|[1-9][0-9]*)\b)
__NOT_BUILTIN \= (\b((?!(scratch|image|resolve|http|checksum|chmod|filename|git|keepGitDir|local|includePatterns|excludePatterns|followPaths|generate|frontendInput|shell|run|readonlyRootfs|env|dir|user|network|security|host|ssh|secret|mount|target|localPath|uid|gid|mode|readonly|tmpfs|sourcePath|cache|mkdir|createParents|chown|createdTime|mkfile|rm|allowNotFound|allowWildcards|copy|followSymlinks|contentsOnly|unpack|createDestPath)\b)[a-zA-Z_][a-zA-Z0-9]*\b))

contexts [] {

   main : context {
      : include "common";
      : pattern {
         regex \= $${__TYPE}
         styles [] = .type;
      }
      : push {
         regex \= $${__IDENT}(\()
         styles [] = .keyword, .punctuation;
         context [] = params;
      }
      : pattern {
         regex \= (\))
         styles [] = .illegal;
      }
      : push {
         regex \= (\{)
         styles [] = .punctuation;
         context [] = block;
      }
      :pattern {
         regex \= (\})
         styles [] = .illegal;
      }
   }
   
   common : context {
      : pattern {
         regex \= (#.*)
         styles [] = .comment;
      }
      : pattern {
         regex \= ($${__NUMERIC}|$${__DECIMAL}|$${__BOOL})
         styles [] = .constant;
      }
      : inline_push {
         regex \= (")
         styles [] = .punctuation;
         default_style = .string
         : pop {
            regex \= (")
            styles [] = .punctuation;
         }
      }
   }
   
   params : context {
      : pop {
         regex \= (\))
         styles [] = .punctuation;
      }
      : pattern {
         regex \= $${__TYPE}
         styles [] = .type;
      }
      : pattern {
         regex \= $${__IDENT}
         styles [] = .variable;
      }
   }
   
   block : context {
      : pop {
         regex \= (\})
         styles [] = .punctuation;
      }
      : include "common";
      : pattern {
         regex \= $${__KEYWORD}
         styles [] = .builtin;
      }
      : push {
         regex \= $${__TYPE}$${__WHITESPACE}(\{)
         styles [] = .type, .whitespace, .punctuation;
         context [] = block;
      }
      : pattern {
         regex \= $${__NOT_BUILTIN}
         styles [] = .variable;
      }
   }
   
}
